<Window x:Class="HollyJson.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HollyJson.ViewModels"
        xmlns:models="clr-namespace:HollyJson.Models" xmlns:numericupdownlib="clr-namespace:NumericUpDownLib;assembly=NumericUpDownLib"
        mc:Ignorable="d" ResizeMode="NoResize" 
        Icon="/main.ico"
        Title="Holly JsonEditor" Height="790" Width="730">
    <Window.DataContext>
        <local:MainModel/>
    </Window.DataContext>
    <Window.Resources>
        <local:DateTimeToDateConverter x:Key="myDateConverter" />
        <local:LangStringConverter x:Key="LocaleConverter" />
        <!--<Style TargetType="{x:Type ToolTip}">
            <Setter Property="FontFamily" Value="{StaticResource Jura}"/>
        </Style>-->
        <Style TargetType="{x:Type TextBox}" x:Key="txtbox">
            <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.Save_Loaded}"/>
            <EventSetter Event="TextChanged" Handler="TextBox_TextChanged"/>
            <EventSetter Event="PreviewTextInput" Handler="TextBox_PreviewTextInput"/>
            <EventSetter Event="DataObject.Pasting" Handler="PastingHandler"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.Save_Loaded}"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.Save_Loaded}"/>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.Save_Loaded}"/>
        </Style>
        <models:Character x:Key="Character"/>
        <models:stateJson x:Key="Statejs"/>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="0,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <Style TargetType="Label">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource txtbox}"/>
                </Grid.Resources>
                <Label Content="Budget" Grid.Column="0"/>
                <TextBox Text="{Binding Info.budget}" Height="22" VerticalContentAlignment="Center"
                          Grid.Column="1" Tag="INT"/>
                <Label Content="Cash" Grid.Column="2"/>
                <TextBox Text="{Binding Info.cash}" VerticalContentAlignment="Center" Height="22"
                          Grid.Column="3" Tag="INT"/>
                <Label Content="Reputation" Grid.Column="4"/>
                <TextBox Text="{Binding Info.reputation, StringFormat={}{0:0.0}}" VerticalContentAlignment="Center" Height="22"
                          Grid.Column="5" Tag="DBL"/>
                <Label Content="Influence" Grid.Column="6"/>
                <TextBox Text="{Binding Info.influence}" VerticalContentAlignment="Center" Height="22"
                           Grid.Column="7" Tag="DBL"/>
                <DockPanel  Grid.Row="1" Grid.ColumnSpan="8" Margin="5,5,0,0" >
                    <Label Content="Active studio politics"/>
                    <Label Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" Content="{Binding Info.NameOfActivePolicy, Converter={StaticResource LocaleConverter}}" 
                           HorizontalAlignment="Center" Width="100" Margin="5,0"/>
                    <numericupdownlib:NumericUpDown Grid.Row="1" Grid.Column="4" IsMouseDragEnabled="False" MinValue="0" MaxValue="3" IsEnabled="{Binding Info.HaveActivePolicy}"
                                Value="{Binding Info.ValOfActivePolicy, Mode=TwoWay}" NumberStyle="Integer" IsLargeStepEnabled="False"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Height="22" Margin="0,0,5,0">
                        <Button Content="Show Spawns" Padding="5,0,5,0" Command="{Binding ShowSpawnDateCmd}" Margin="0,0,5,0" Width="85"/>
                        <Button Content="Show closed Techs"  Padding="5,0,5,0" Command="{Binding ShowTechsCmd}" Margin="5,0,5,0" Width="110"/>
                        <Button Content="Show closed Tags" Padding="5,0,5,0" Command="{Binding ShowTagsCmd}" Margin="5,0,0,0" Width="110"/>
                    </StackPanel>
                </DockPanel>
                <Popup StaysOpen="False" PopupAnimation="Fade" Placement="MousePoint" VerticalOffset="1.5" IsOpen="{Binding ShowSpawn}"
                       AllowsTransparency="True">
                    <Border BorderThickness="2" CornerRadius="6">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="15" Opacity="0.5"  ShadowDepth="4" Direction="-45" RenderingBias="Performance" />
                        </Border.Effect>
                        <ScrollViewer VerticalAlignment="Center" Height="200" Background="White">
                            <ItemsControl ItemsSource="{Binding Info.NextSpawnDays}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="5,2.5,5,2.5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="100"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="{Binding Path=Key, Converter={StaticResource LocaleConverter}}" 
                                               TextTrimming="CharacterEllipsis" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                                            <TextBlock Grid.Column="1" Text="{Binding Path=Value, Converter={StaticResource myDateConverter}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </Border>

                </Popup>
                <Popup StaysOpen="False" PopupAnimation="Fade" Placement="MousePoint" VerticalOffset="1.5" IsOpen="{Binding ShowTechs}"
                       AllowsTransparency="True">
                    <Border BorderThickness="2" CornerRadius="6">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="15" Opacity="0.5"  ShadowDepth="4" Direction="-45" RenderingBias="Performance" />
                        </Border.Effect>
                        <StackPanel Background="White">
                            <DockPanel Margin="5,0">
                                <Label Padding="0" Content="Total:"/>
                                <TextBlock Padding="0" Text="{Binding Source={StaticResource Statejs}, Path=PreGenPerks.Count}" Margin="5,0"/>
                                <Label Padding="0" Content="Opened:"/>
                                <TextBlock Padding="0" Text="{Binding Info.openedPerks.Count}" Margin="5,0"/>
                            </DockPanel>
                            <Rectangle Stroke="#3F777777" StrokeThickness="2" Margin="2"/>
                            <ScrollViewer VerticalAlignment="Center" Height="200" >
                                <ItemsControl ItemsSource="{Binding Info.AvailablePerks}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="5,2.5,5,2.5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="150"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="{Binding ., Converter={StaticResource LocaleConverter}}"
                                               TextTrimming="CharacterEllipsis" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                            <Button Content="Unlock all" Padding="0" Margin="5" Command="{Binding UnlockTechsCmd}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.Info.AvailablePerks.Count}" Value="0">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </Border>
                </Popup>
                <Popup StaysOpen="False" PopupAnimation="Fade" Placement="MousePoint" VerticalOffset="1.5" IsOpen="{Binding ShowTags}"
                       AllowsTransparency="True">
                    <Border BorderThickness="2" CornerRadius="6">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="15" Opacity="0.5"  ShadowDepth="4" Direction="-45" RenderingBias="Performance" />
                        </Border.Effect>
                        <StackPanel Background="White">
                            <DockPanel Margin="5,0">
                                <Label Padding="0" Content="Opened:"/>
                                <TextBlock Padding="0" Text="{Binding Info.tagPool.Count}" Margin="5,0"/>
                                <Label Padding="0" Content="Сlosed:"/>
                                <TextBlock Padding="0" Text="{Binding Info.tagBank.Count}" Margin="5,0"/>
                            </DockPanel>
                            <Rectangle Stroke="#3F777777" StrokeThickness="2" Margin="2"/>
                            <ScrollViewer VerticalAlignment="Center" Height="200" >
                                <ItemsControl ItemsSource="{Binding Info.tagBank}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="5,2.5,5,2.5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="150"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="{Binding ., Converter={StaticResource LocaleConverter}}"
                                               TextTrimming="CharacterEllipsis" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                            <Button Content="Unlock this" Padding="0" Margin="5" Command="{Binding UnlockTagsCmd}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.Info.tagBank.Count}" Value="0">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </Border>
                </Popup>
            </Grid>
        </Grid>
        <Grid Grid.Row="2" Grid.Column="0" Margin="5,5,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.9*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="0.5*"/>
            </Grid.ColumnDefinitions>
            <ComboBox Margin="0,0,5,5" ItemsSource="{Binding StudioList}" SelectedItem="{Binding Filter_studio}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" Padding="0" Margin="5,0,0,0" TextTrimming="CharacterEllipsis"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBox Grid.Column="1" Margin="0,0,5,5" Text="{Binding Filter_txt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"
                     Tag="STR">
                <TextBox.Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource txtbox}"/>
                </TextBox.Style>
            </TextBox>
            <ComboBox Grid.Column="2" Margin="0,0,0,5" ItemsSource="{Binding ProfList}" SelectedItem="{Binding Filter_Prof}" 
                      ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource LocaleConverter}}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" Padding="0" Margin="5,0,0,0" TextTrimming="CharacterEllipsis"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Grid Grid.Row="1" Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <CheckBox Content="Show only Dead" Grid.Column="0"  VerticalAlignment="Center" VerticalContentAlignment="Center"
                      HorizontalAlignment="Center" Margin="0,0,0,5" IsChecked="{Binding ShowOnlyDead}"/>
                <CheckBox Content="Show With Dead" Grid.Column="1" VerticalAlignment="Center" VerticalContentAlignment="Center"
                      HorizontalAlignment="Center" Margin="0,0,0,5" IsChecked="{Binding ShowWithDead}"/>
                <CheckBox Content="Show only Talent" Grid.Column="2" VerticalAlignment="Center" VerticalContentAlignment="Center"
                      HorizontalAlignment="Center" Margin="0,0,0,5" IsChecked="{Binding ShowOnlyTalent}"/>
            </Grid>
            <ListView Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" ItemsSource="{Binding Filtered_Obj}" 
          SelectionMode="Single" SelectedItem="{Binding SelectedChar}" AlternationCount="2" Background="White">
                <ListView.Resources>
                    <Style TargetType="ListViewItem">
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                                <Setter Property="Background" Value="#1F50d5fa" />
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                                <Setter Property="Background" Value="#1FFFA64C" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>
                <ListView.ItemTemplate>
                    <DataTemplate DataType="local:Character">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding MyCustomName}" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0" Margin="0,0,5,0"
                                   Grid.Column="0"/>
                            <TextBlock Text="{Binding professions.ProfToDecode, Converter={StaticResource LocaleConverter}}" Padding="0" Grid.Column="1" 
                                   HorizontalAlignment="Right" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Grid Grid.Row="3" Grid.ColumnSpan="3">
                <Grid.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                        <Setter Property="Height" Value="20"/>
                        <Setter Property="Margin" Value="2.5,2.5,2.5,2.5"/>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Image Grid.Column="0" Grid.RowSpan="2" Source="/Resources/arrow_up.png" Width="25"/>
                <Button Grid.Column="1" Grid.Row="0" Content="Set Mood and Att to 1.0" Command="{Binding SetMoodAndAttCmd}"/>
                <Button Grid.Column="2" Grid.Row="0" Content="Set Contract days to max" Command="{Binding SetMaxContrDaysCmd}"/>
                <Button Grid.Column="1" Grid.Row="1" Content="Set Skill to Limit" Command="{Binding SetSkillToLimitCmd}"/>
                <Button Grid.Column="2" Grid.Row="1" Content="Raise Skill to 1.0" Command="{Binding SetLimitToMaxCmd}"/>
                <Image Grid.Column="3" Grid.RowSpan="2" Source="/Resources/arrow_up.png" Width="25"/>
            </Grid>
        </Grid>
        <Grid Grid.Row="2" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="95"/>
                <RowDefinition Height="140"/>
                <RowDefinition Height="80"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.Resources>
                <Style TargetType="{x:Type Label}">
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource txtbox}">
                    <Setter Property="Margin" Value="5"/>
                </Style>
            </Grid.Resources>
            <Border Grid.Row="0" BorderThickness="1.5" BorderBrush="DarkGray" CornerRadius="5" Margin="5,5,0,0">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource txtbox}">
                            <Setter Property="Margin" Value="5"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedChar}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Background" Value="#1F777777"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedChar}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition Width="75"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.RowSpan="3" Margin="5">
                        <Image Source="{Binding SelectedChar.ImgPath}" Stretch="Fill" />
                    </Border>
                    <Label Content="Name" Grid.Row="0" Grid.Column="1"/>
                    <TextBox Text="{Binding SelectedChar.MyCustomName}" Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="3"
                           HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Tag="STR"/>
                    <Label Content="Studio Id" Grid.Row="1" Grid.Column="1"/>
                    <Grid Grid.Row="1" Grid.Column="2" Margin="5,0,5,0" Height="20" Grid.ColumnSpan="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox SelectedItem="{Binding SelectedChar.studioId}" Grid.Column="0"
                             Padding="0" ItemsSource="{Binding StudioListForChar}" VerticalContentAlignment="Center">
                            <ComboBox.Style>
                                <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.SelectedChar.IsBusyOnJob}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" Padding="0" Margin="5,0,0,0"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Image HorizontalAlignment="Center" Source="/Resources/question.png" Width="17" Height="17" Opacity="0.7" Grid.Column="1">
                            <Image.ToolTip>
                                <StackPanel>
                                    <TextBlock Text="If the choice is not available,"/>
                                    <TextBlock Text="it means the character is busy at work"/>
                                </StackPanel>
                            </Image.ToolTip>
                        </Image>
                    </Grid>
                    <Label Content="Mood" Grid.Row="2" Grid.Column="1" />
                    <TextBox Text="{Binding SelectedChar.mood, StringFormat={}{0:0.00}}" Grid.Row="2" Grid.Column="2"  
                              Tag="LMT"/>
                    <Label Content="Attitude" Grid.Row="2" Grid.Column="3"/>
                    <TextBox Text="{Binding SelectedChar.attitude, StringFormat={}{0:0.00}}" Grid.Row="2" Grid.Column="4" 
                              Tag="LMT"/>
                </Grid>
            </Border>
            <Border Grid.Row="1" BorderThickness="1.5" BorderBrush="DarkGray" CornerRadius="5" Margin="5,5,0,0">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource txtbox}">
                            <Setter Property="Margin" Value="5"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedChar}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Background" Value="#1F777777"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Content="Prof." Grid.Row="0" Grid.Column="0" HorizontalContentAlignment="Right"/>
                    <TextBlock Text="{Binding SelectedChar.professions.ProfToDecode, Converter={StaticResource LocaleConverter}}" Grid.Row="0" Grid.Column="1" Margin="5,0,0,0"
                             TextTrimming="CharacterEllipsis" VerticalAlignment="Center" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" TextAlignment="Left"/>
                    <Label Content="Age"  Grid.Row="0" Grid.Column="2"/>
                    <TextBox Text="{Binding SelectedChar.Age}" Grid.Row="0" Grid.Column="3" 
                               Tag="AGE"/>
                    <Label Content="Birth" Grid.Row="1" Grid.Column="2"/>
                    <TextBlock Text="{Binding SelectedChar.GetBirthDate, Converter={StaticResource myDateConverter}}" Grid.Row="1" Grid.Column="3"
                               VerticalAlignment="Center" Margin="5,0"/>
                    <CheckBox Grid.Row="1" Grid.Column="1" Content="Is Dead" VerticalAlignment="Center"
                              HorizontalAlignment="Center" IsChecked="{Binding SelectedChar.IsDead}">
                        <CheckBox.Style>
                            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedChar}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="Background" Value="#1F777777"/>
                                    </DataTrigger>                                
                                </Style.Triggers>

                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <Label Content="Skill" Grid.Row="2" Grid.Column="2"/>
                    <TextBox Text="{Binding SelectedChar.professions.Value, StringFormat={}{0:0.00}}" Grid.Row="2" Grid.Column="3" 
                               Tag="LMT"/>
                    <Label Content="Limit" Grid.Row="2" Grid.Column="0"/>
                    <TextBox Text="{Binding SelectedChar.limit, StringFormat={}{0:0.0}}" Grid.Row="2" Grid.Column="1" 
                               Tag="LMT"/>
                </Grid>
            </Border>
            <Border Grid.Row="2" BorderThickness="1.5" BorderBrush="DarkGray" CornerRadius="5" Margin="5,5,0,0">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Margin" Value="5"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedChar.contract}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Background" Value="#1F777777"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Content="Contract" Grid.ColumnSpan="2" HorizontalContentAlignment="Center"/>
                    <Label Grid.Row="0" Grid.Column="2" Content="Days Left"/>
                    <TextBox Grid.Row="0" Grid.Column="3" Tag="INT">
                        <TextBox.Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource txtbox}">
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="Text" Value="{Binding SelectedChar.contract.DaysLeft}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedChar.contract.contractType}" Value="2">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="Text" Value="∞"/>
                                        <Setter Property="Background" Value="#1F777777"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SelectedChar.contract}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="Background" Value="#1F777777"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <Label Grid.Row="1" Grid.Column="0" Content="Date sign"/>
                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding SelectedChar.contract.dateOfSigning, Converter={StaticResource myDateConverter}}" VerticalAlignment="Center" Margin="5,0"/>
                    <Label Grid.Row="1" Grid.Column="2" Content="Date end"/>
                    <TextBlock Grid.Row="1" Grid.Column="3" Text="{Binding SelectedChar.contract.dateOfEnding, Converter={StaticResource myDateConverter}}" VerticalAlignment="Center" Margin="5,0"/>
                    <Label Grid.Row="2" Grid.Column="0" Content="Years"/>
                    <TextBox Text="{Binding SelectedChar.contract.amount}" Grid.Row="2" Grid.Column="1" 
                              Tag="INT"/>
                    <Label Grid.Row="2" Grid.Column="2" Content="Init fee"/>
                    <TextBox Text="{Binding SelectedChar.contract.initialFee}" Grid.Row="2" Grid.Column="3" 
                              Tag="INT"/>
                    <Label Grid.Row="3" Grid.Column="0" Content="M/s">
                        <Label.ToolTip>
                            <TextBlock Text="Mouth salary" Padding="0"/>
                        </Label.ToolTip>
                    </Label>
                    <TextBox Text="{Binding SelectedChar.contract.monthlySalary}" Grid.Row="3" Grid.Column="1"
                              Tag="INT">
                        <TextBox.ToolTip>
                            <TextBlock Text="Mouth salary" Padding="0"/>
                        </TextBox.ToolTip>
                    </TextBox>
                    <Label Grid.Row="3" Grid.Column="2" Content="W/s">
                        <Label.ToolTip>
                            <TextBlock Text="Weight salary" Padding="0"/>
                        </Label.ToolTip>
                    </Label>
                    <TextBox Text="{Binding SelectedChar.contract.weightToSalary}" Grid.Row="3" Grid.Column="3" 
                              Tag="INT">
                        <TextBox.ToolTip>
                            <TextBlock Text="Weight salary" Padding="0"/>
                        </TextBox.ToolTip>
                    </TextBox>
                </Grid>
            </Border>
            <Border Grid.Row="3" BorderThickness="1.5" BorderBrush="DarkGray" CornerRadius="5" Margin="5,5,0,0">
                <Grid Margin="0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="Traits"  VerticalAlignment="Center"  Margin="10,0,0,0"
                               HorizontalAlignment="Left" Padding="0"/>
                    <Image Grid.Column="0" HorizontalAlignment="Left" Source="/Resources/question.png" Width="17" Height="17" Opacity="0.7" Margin="45,0">
                        <Image.ToolTip>
                            <StackPanel>
                                <TextBlock Text="Order is important for ingame visual"/>
                                <TextBlock Text="Because shows only two first Traits"/>
                                <TextBlock Text="The good traits is primary shown"/>
                                <TextBlock Text="Im really don't know does it matters =)"/>
                            </StackPanel>
                        </Image.ToolTip>
                    </Image>
                    <ComboBox Grid.Column="1" Margin="10,5,0,5" VerticalAlignment="Center" Padding="0" Height="20" x:Name="TraitCmb"  HorizontalAlignment="Right"
                              IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
                              Width="150" ItemsSource="{Binding SelectedChar.AvalibaleTraits }" VerticalContentAlignment="Center">
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem}" Value="{x:Null}">
                                        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.Save_Loaded}" />
                            </Style>
                        </ComboBox.Style>
                        <ComboBox.ToolTip>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource LocaleConverter}}"/>
                        </ComboBox.ToolTip>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" Padding="0" Margin="5,0,0,0"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button Grid.Column="2" Grid.Row="0" Height="20" Width="20" HorizontalAlignment="Right" IsEnabled="{Binding SelectedChar.professions.IsTalent}"
                            VerticalAlignment="Top" Margin="10,5,10,0" Command="{Binding AddTraitCmd}" CommandParameter="{Binding ElementName=TraitCmb, Path=SelectedItem}">
                        <Button.Content>
                            <Image Source="/Resources/plus.png"/>
                        </Button.Content>
                    </Button>
                    <ScrollViewer Margin="5,5,10,5" VerticalAlignment="Stretch" Grid.Row="1" Grid.ColumnSpan="3">
                        <ItemsControl ItemsSource="{Binding SelectedChar.labels}" VerticalAlignment="Top">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0,2,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Column="0" Width="18" Height="18" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" 
                                                VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,0,15,0"
                                                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.MoveTraitUpCmd}" 
                                                CommandParameter="{Binding }">
                                            <Button.Content>
                                                <Image Source="/Resources/arrow_up.png" Margin="1,0,0,0"/>
                                            </Button.Content>
                                        </Button>
                                        <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" TextWrapping="Wrap" Grid.Column="1" Margin="5,0,5,0"
                                            HorizontalAlignment="Right" Padding="0" TextAlignment="Right"/>
                                        <Button Grid.Column="2" Width="18" Height="18" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" 
                                                VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,15,0"
                                                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.RemoveTraitCmd}" 
                                                CommandParameter="{Binding }">
                                            <Button.Content>
                                                <Image Source="/Resources/minus.png" Margin="1,0,0,0"/>
                                            </Button.Content>
                                        </Button>
                                    </Grid>

                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </Border>
            <Border Grid.Row="4" BorderThickness="1.5" BorderBrush="DarkGray" CornerRadius="5" Margin="5,5,0,0">
                <Grid Margin="0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Content="Skills"  VerticalAlignment="Center"  Margin="10,0,0,0"
                               HorizontalAlignment="Left" Padding="0"/>
                    <Image Grid.Column="0" HorizontalAlignment="Left" Source="/Resources/question.png" Width="17" Height="17" Opacity="0.7" Margin="45,0">
                        <Image.ToolTip>
                            <StackPanel>
                                <TextBlock Text="If a character has gained any experience - we can't remove that skill completely." Padding="0"/>
                                <TextBlock Text="We can only manipulate the preset values of the skill (if these values are available)" Padding="0"/>
                                <TextBlock Text="Golden badge is given when the value of 12 and above is reached!" Padding="0"/>
                                <TextBlock Text="Artistic and commercial value of the character is set" Padding="0"/>
                                <TextBlock Text="in the range from 0.0 to 1.0 with increments of 0.25" Padding="0"/>
                            </StackPanel>
                        </Image.ToolTip>
                    </Image>
                    <ComboBox Grid.Column="1" Margin="10,5,0,5" VerticalAlignment="Center" Padding="0" Height="20" VerticalContentAlignment="Center"
                              IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
                              ItemsSource="{Binding SelectedChar.AvalibaleSkills}" x:Name="SkillCmb" Width="150" HorizontalAlignment="Right">
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem}" Value="{x:Null}">
                                        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.Save_Loaded}" />
                            </Style>
                        </ComboBox.Style>
                        <ComboBox.ToolTip>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource LocaleConverter}}"/>
                        </ComboBox.ToolTip>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" Padding="0" Margin="5,0,0,0"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button Grid.Column="2" Grid.Row="0" Height="20" Width="20" HorizontalAlignment="Right" IsEnabled="{Binding SelectedChar.professions.IsTalent}"
                            Command="{Binding AddSkillCmd}" CommandParameter="{Binding ElementName=SkillCmb, Path=SelectedItem}" 
                            VerticalAlignment="Top" Margin="10,5,10,0">
                        <Button.Content>
                            <Image Source="/Resources/plus.png"/>
                        </Button.Content>
                    </Button>

                    <ScrollViewer Margin="5,-10,10,0"  Height="80" Padding="0" Grid.Row="1" Grid.ColumnSpan="3" CanContentScroll="True" BorderThickness="2" BorderBrush="Aqua" >
                        <ItemsControl ItemsSource="{Binding SelectedChar.whiteTagsNEW}" >
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="local:WhiteTag">
                                    <Grid Margin="0,2,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="145"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal" Margin="5,0,0,0">
                                            <Label Content="Min." Padding="0" Margin="0"/>
                                            <TextBlock Text="{Binding MinimalValaue, StringFormat={}{0:#0.00}}" VerticalAlignment="Center" Padding="0"
                                                       HorizontalAlignment="Left" Width="30" Margin="4,0,0,0" TextAlignment="Right"/>
                                        </StackPanel>
                                        <TextBlock Grid.Column="1" Text="{Binding id, Converter={StaticResource LocaleConverter}}" Margin="5,0" 
                                                   TextTrimming="CharacterEllipsis" HorizontalAlignment="Right" VerticalAlignment="Center" Padding="0" 
                                                   ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                                        <TextBox Grid.Column="2" Text="{Binding Value, StringFormat={}{0:0.00}}" Margin="0,0,5,0" VerticalAlignment="Center"
                                                 VerticalContentAlignment="Center" Tag="DBL"/>
                                        <Button Grid.Column="3" Width="18" Height="18" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" 
                                                VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,15,0"
                                                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Window}}, Path=DataContext.RemoveSkillCmd}" 
                                                CommandParameter="{Binding }" IsEnabled="{Binding IsZeroOverAllOnly}">
                                            <Button.Content>
                                                <Image Source="/Resources/minus.png" Margin="1,0,0,0"/>
                                            </Button.Content>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <!--<ScrollViewer.Effect>
                            <DropShadowEffect BlurRadius="15" Opacity="0.5"  ShadowDepth="4" Direction="-45" RenderingBias="Performance" />
                        </ScrollViewer.Effect>-->
                    </ScrollViewer>
                </Grid>
            </Border>
            <Border Grid.Row="5" BorderThickness="1.5" BorderBrush="DarkGray" CornerRadius="5" Margin="5,5,0,0">
                <Grid Margin="0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Content="Knowed Sins" VerticalAlignment="Top"
                               HorizontalAlignment="Center" Padding="0" Margin="5,5,0,0"/>
                    <ScrollViewer Margin="5,5,10,5" VerticalAlignment="Stretch" Grid.Row="1">
                        <ItemsControl ItemsSource="{Binding SelectedChar.aSins}" VerticalAlignment="Top">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="local:Character">
                                    <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" TextWrapping="Wrap" Margin="5,0,10,5"
                                        HorizontalAlignment="Right" Padding="0" TextAlignment="Right"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </Border>
            <Border Grid.Row="6" Grid.Column="1"  Height="12" Padding="0" Margin="5,0" HorizontalAlignment="Left">
                <TextBlock Text="{Binding StatusBarText}" Padding="0" Margin="0" FontSize="10" VerticalAlignment="Center"/>
            </Border>
            <Button Grid.Row="6" Grid.Column="1"  Width="25" Height="25" IsEnabled="{Binding Save_Loaded}"
                    VerticalAlignment="Bottom" HorizontalAlignment="Right"
                    Command="{Binding SaveCmd}">
                <Image Source="/Resources/save.png"/>
                <Button.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Save_done}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#7F00FF00" 
                                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                                            FillBehavior="Stop" AutoReverse="True" 
                                                            Duration="0:0:1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <Border Grid.Row="0" Grid.RowSpan="3" Grid.ColumnSpan="2" Margin="0" 
                VerticalAlignment="Center" Opacity="1">
            <Image  Source="/Resources/backgrnd.png" Stretch="UniformToFill" HorizontalAlignment="Center"/>
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Save_Loaded}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                         From="1" To="0" 
                                                         FillBehavior="HoldEnd" AutoReverse="False" 
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <Setter Property="IsHitTestVisible" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0" HorizontalAlignment="Stretch">
                <Label Content="{Binding Info.studioName}" HorizontalAlignment="Left" VerticalContentAlignment="Center" FontWeight="Bold"/>
                <Label Content="{Binding Info.Now, Converter={StaticResource myDateConverter}}" HorizontalAlignment="Right" VerticalContentAlignment="Center" FontWeight="Bold"/>
            </DockPanel>
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <Button Command="{Binding OpenFileCmd}" CommandParameter="Names"  Grid.Column="0"  Height="25" Width="25" Margin="5,0,0,0" IsEnabled="True">
                    <Button.Content>
                        <Image Source="/Resources/user.png"/>
                    </Button.Content>
                    <Button.ToolTip>
                        <TextBlock Padding="0" Text="Open CHARACTER_NAMES file for better usability"/>
                    </Button.ToolTip>
                </Button>
                <Button Command="{Binding OpenFileCmd}" CommandParameter="OFD" Grid.Column="1" Height="25" Width="25" Margin="5,0,0,0" IsEnabled="True">
                    <Button.Content>
                        <Image Source="/Resources/ofd.png"/>
                    </Button.Content>
                    <Button.ToolTip>
                        <TextBlock Padding="0" Text="Open save.json file"/>
                    </Button.ToolTip>
                </Button>
            </StackPanel>

        </Grid>


    </Grid>
</Window>
