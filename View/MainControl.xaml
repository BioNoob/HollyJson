<views:ControlBase x:Class="HollyJson.View.MainControl"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HollyJson.ViewModels"
        xmlns:views="clr-namespace:HollyJson.View"
        xmlns:models="clr-namespace:HollyJson.Models"
        mc:Ignorable="d"
        Keyboard.KeyDown="Window_KeyDown"
        Background="White"
        >
    <views:ControlBase.DataContext>
        <local:MainModel/>
    </views:ControlBase.DataContext>
    <views:ControlBase.Resources>
        <Style TargetType="{x:Type TextBox}" x:Key="txtbox">
            <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type views:ControlBase }}, Path=DataContext.Save_Loaded}"/>
            <EventSetter Event="TextChanged" Handler="TextBox_TextChanged"/>
            <EventSetter Event="PreviewTextInput" Handler="TextBox_PreviewTextInput"/>
            <EventSetter Event="DataObject.Pasting" Handler="PastingHandler"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type views:ControlBase }}, Path=DataContext.Save_Loaded}"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type views:ControlBase }}, Path=DataContext.Save_Loaded}"/>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type views:ControlBase }}, Path=DataContext.Save_Loaded}"/>
        </Style>
        <models:Character x:Key="Character"/>
        <models:stateJson x:Key="Statejs"/>
    </views:ControlBase.Resources>
    <views:ControlBase.InputBindings>
        <KeyBinding Command="{Binding SaveCmd}" Modifiers="Control" Key="S"/>
    </views:ControlBase.InputBindings>
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="0,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <Style TargetType="Label">
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource txtbox}"/>
                </Grid.Resources>
                <Label Content="Budget" Grid.Column="0"/>
                <TextBox Text="{Binding Info.budget}" Height="22" VerticalContentAlignment="Center"
                          Grid.Column="1" Tag="INT"/>
                <Label Content="Cash" Grid.Column="2"/>
                <TextBox Text="{Binding Info.cash}" VerticalContentAlignment="Center" Height="22"
                          Grid.Column="3" Tag="INT"/>
                <Label Content="Reputation" Grid.Column="4"/>
                <TextBox Text="{Binding Info.reputation, StringFormat={}{0:0.0}}" VerticalContentAlignment="Center" Height="22"
                          Grid.Column="5" Tag="DBL"/>
                <Label Content="Influence" Grid.Column="6"/>
                <TextBox Text="{Binding Info.influence}" VerticalContentAlignment="Center" Height="22"
                           Grid.Column="7" Tag="DBL"/>
                <Button HorizontalAlignment="Right" Width="25" Margin="5,0,0,0" Grid.Column="8">
                    <Image Source="/Resources/menu.png"/>
                </Button>

            </Grid>
        </Grid>
        <Grid Grid.Row="2" Grid.Column="0" Margin="5,5,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.9*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="0.5*"/>
            </Grid.ColumnDefinitions>
            <ComboBox Margin="0,0,5,5" ItemsSource="{Binding StudioList}" SelectedItem="{Binding Filter_studio}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" Padding="0" Margin="5,0,0,0" TextTrimming="CharacterEllipsis"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBox Grid.Column="1" Margin="0,0,5,5" Text="{Binding Filter_txt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"
                     Tag="STR">
                <TextBox.Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource txtbox}"/>
                </TextBox.Style>
            </TextBox>
            <ComboBox Grid.Column="2" Margin="0,0,0,5" ItemsSource="{Binding ProfList}" SelectedItem="{Binding Filter_Prof}" 
                      ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource LocaleConverter}}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" Padding="0" Margin="5,0,0,0" TextTrimming="CharacterEllipsis"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Grid Grid.Row="1" Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <CheckBox Content="Show only Dead" Grid.Column="0"  VerticalAlignment="Center" VerticalContentAlignment="Center"
                      HorizontalAlignment="Center" Margin="0,0,0,5" IsChecked="{Binding ShowOnlyDead}"/>
                <!--<CheckBox Content="Show With Dead" Grid.Column="1" VerticalAlignment="Center" VerticalContentAlignment="Center"
                      HorizontalAlignment="Center" Margin="0,0,0,5" IsChecked="{Binding ShowWithDead}"/>-->
                <CheckBox Content="Show only Talent" Grid.Column="2" VerticalAlignment="Center" VerticalContentAlignment="Center"
                      HorizontalAlignment="Center" Margin="0,0,0,5" IsChecked="{Binding ShowOnlyTalent}"/>
            </Grid>
            <DataGrid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" ItemsSource="{Binding Filtered_Obj}" x:Name="dgr" 
                      SelectedItem="{Binding SelectedChar}" AlternationCount="2" Background="White"
                      AlternatingRowBackground ="#2F77A640" SelectionMode="Single" SelectionUnit="FullRow"
                      AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False">
                <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="DataGridCell.IsSelected" Value="True">
                                <Setter Property="Background" Value="#CCDAFF"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="BorderBrush" Value="#CCDAFF"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Name" Width="101" MinWidth="101" SortMemberPath="MyCustomName" CanUserSort="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding MyCustomName}" TextTrimming="CharacterEllipsis">
                                    <TextBlock.ToolTip>
                                        <TextBlock Text="{Binding MyCustomName}"/>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Prof." Width="80" MinWidth="80" SortMemberPath="professions.ProfToDecode" CanUserSort="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding professions.ProfToDecode, Converter={StaticResource LocaleConverter}}"
                                           TextTrimming="CharacterEllipsis">
                                    <TextBlock.ToolTip>
                                        <TextBlock Text="{Binding professions.ProfToDecode, Converter={StaticResource LocaleConverter}}"/>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Limit" Binding="{Binding professions.Value, StringFormat={}{0:0.00}}"
                                        MinWidth="40"/>
                    <DataGridTextColumn Header="Skill" Binding="{Binding limit, StringFormat={}{0:0.00}}"
                                        MinWidth="40"/>
                    <DataGridTextColumn Header="Age" Binding="{Binding Age, StringFormat={}{0:00}}"
                                        MinWidth="40"/>
                    <DataGridTemplateColumn Header="Days" SortMemberPath="contract.DaysLeft" CanUserSort="True"
                                        MinWidth="50">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock TextTrimming="CharacterEllipsis">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Text" Value="{Binding contract.DaysLeft, StringFormat={}{0:0}}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding contract.contractType}" Value="2">
                                                    <Setter Property="Text" Value="∞"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Row="3" Grid.ColumnSpan="3" Margin="0,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Width="25" Margin="0,0,5,0" Command="{Binding ShowMacrosCmd}">
                    <Button.Content>
                        <Image Source="/Resources/menu.png"/>
                    </Button.Content>
                </Button>
                <Image Grid.Column="1" Source="/Resources/arrow_up.png" Width="25"/>
                <Popup StaysOpen="False" PopupAnimation="Fade" Placement="MousePoint" VerticalOffset="1.5" IsOpen="{Binding ShowMacros}"
                    AllowsTransparency="True">
                    <Border BorderThickness="2" CornerRadius="6" Background="White" Padding="1">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="15" Opacity="0.5"  ShadowDepth="4" Direction="-45" RenderingBias="Performance" />
                        </Border.Effect>
                        <Grid Width="200">
                            <Grid.Resources>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Setter Property="Height" Value="20"/>
                                    <Setter Property="Margin" Value="2.5,2.5,2.5,2.5"/>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Button Grid.Column="0" Grid.Row="0" Command="{Binding SetMoodAndAttCmd}">
                                <Button.Content>
                                    <TextBlock Padding="5,0" Text="Max Mood\Att" TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                </Button.Content>
                            </Button>
                            <Button Grid.Column="1" Grid.Row="0" Command="{Binding SetMaxContrDaysCmd}">
                                <Button.Content>
                                    <TextBlock Padding="5,0" Text="Max Days" TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                </Button.Content>
                            </Button>
                            <Button Grid.Column="1" Grid.Row="1" Command="{Binding SetSkillToLimitCmd}">
                                <Button.Content>
                                    <TextBlock Padding="5,0" Text="Max Skill" TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                </Button.Content>
                            </Button>
                            <Button Grid.Column="0" Grid.Row="1" Command="{Binding SetLimitToMaxCmd}">
                                <Button.Content>
                                    <TextBlock Padding="5,0" Text="Max Limit" TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                </Button.Content>
                            </Button>
                            <GroupBox Header="Set Age" Grid.ColumnSpan="2" Grid.Row="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Command="{Binding SetAgeToCmd}" CommandParameter="Y" Grid.Column="0">
                                        <Button.Content>
                                            <TextBlock Padding="0" Text="Young" TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                        </Button.Content>
                                    </Button>
                                    <Button Command="{Binding SetAgeToCmd}" CommandParameter="M" Grid.Column="1">
                                        <Button.Content>
                                            <TextBlock Padding="0" Text="Mid" TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                        </Button.Content>
                                    </Button>
                                    <Button Command="{Binding SetAgeToCmd}" CommandParameter="O" Grid.Column="2">
                                        <Button.Content>
                                            <TextBlock Padding="0" Text="Old" TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                        </Button.Content>
                                    </Button>
                                </Grid>
                            </GroupBox>
                        </Grid>
                    </Border>
                </Popup>
            </Grid>
        </Grid>
        <Grid Grid.Row="2" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="95"/>
                <RowDefinition Height="140"/>
                <RowDefinition Height="80"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.Resources>
                <Style TargetType="{x:Type Label}">
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource txtbox}">
                    <Setter Property="Margin" Value="5"/>
                </Style>
            </Grid.Resources>
            <GroupBox Grid.Row="0" BorderThickness="1.5" BorderBrush="DarkGray" Margin="5,5,0,0" Header="Char info">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource txtbox}">
                            <Setter Property="Margin" Value="5"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedChar}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Background" Value="#1F777777"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedChar}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition Width="75"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="25"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.RowSpan="3" Margin="5">
                        <Image Source="{Binding SelectedChar.ImgPath}" Stretch="Fill" />
                    </Border>
                    <Label Content="Name" Grid.Row="0" Grid.Column="1"/>
                    <TextBox Text="{Binding SelectedChar.MyCustomName}" Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="4"
                           HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Tag="STR"/>
                    <Label Content="Studio Id" Grid.Row="1" Grid.Column="1"/>
                    <ComboBox SelectedItem="{Binding SelectedChar.studioId}" Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="3" Margin="5,0"
                             Padding="0" ItemsSource="{Binding StudioListForChar}" VerticalContentAlignment="Center" Height="20">
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type views:ControlBase }}, Path=DataContext.SelectedChar.IsBusyOnJob}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" Padding="0" Margin="5,0,0,0"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Image HorizontalAlignment="Center" Source="/Resources/question.png" Width="17" Height="17" Opacity="0.7" 
                           Grid.Column="5" Grid.Row="1" >
                        <Image.ToolTip>
                            <StackPanel>
                                <TextBlock Text="If the choice is not available,"/>
                                <TextBlock Text="it means the character is busy at work"/>
                            </StackPanel>
                        </Image.ToolTip>
                    </Image>
                    <Label Content="Mood" Grid.Row="2" Grid.Column="1" />
                    <TextBox Text="{Binding SelectedChar.mood, StringFormat={}{0:0.00}}" Grid.Row="2" Grid.Column="2"  
                              Tag="LMT"/>
                    
                    <Label Content="Attitude" Grid.Row="2" Grid.Column="3"/>
                    <TextBox Text="{Binding SelectedChar.attitude, StringFormat={}{0:0.00}}" Grid.Row="2" Grid.Column="4" 
                              Tag="LMT"/>
                    <Button Grid.Column="5" Height="18" Width="18" Grid.Row="2" HorizontalAlignment="Center"
                            Command="{Binding SetMoodAndAttSingleCmd}">
                        <Image Source="/Resources/arrow_up.png"/>
                    </Button>

                    <CheckBox Grid.Row="3" Grid.Column="0" Content="Is Dead" VerticalAlignment="Center"
                              HorizontalAlignment="Center" IsChecked="{Binding SelectedChar.IsDead}">
                        <CheckBox.Style>
                            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedChar}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="Background" Value="#1F777777"/>
                                    </DataTrigger>
                                </Style.Triggers>

                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <Label Content="Age"  Grid.Row="3" Grid.Column="3"/>
                    <TextBox Text="{Binding SelectedChar.Age}" Grid.Row="3" Grid.Column="4" Tag="AGE"/>
                    <Label Content="Birth" Grid.Row="3" Grid.Column="1"/>
                    <TextBlock Text="{Binding SelectedChar.GetBirthDate, Converter={StaticResource myDateConverter}}" Grid.Row="3" Grid.Column="2"
           VerticalAlignment="Center" Margin="5,0"/>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="1" BorderThickness="1.5" BorderBrush="DarkGray" Margin="5,5,0,0">
                <GroupBox.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Padding="0" Margin="0" Text="Profession: "/>
                        <TextBlock Padding="0" Margin="5,0" Text="{Binding SelectedChar.professions.ProfToDecode, Converter={StaticResource LocaleConverter}}"
                                   TextDecorations="Underline" TextTrimming="WordEllipsis" MaxWidth="300"/>
                    </StackPanel>
                </GroupBox.Header>
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource txtbox}">
                            <Setter Property="Margin" Value="5"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedChar}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Background" Value="#1F777777"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <!--<TextBlock Text="{Binding SelectedChar.professions.ProfToDecode, Converter={StaticResource LocaleConverter}}" Grid.Row="0" Grid.Column="1" Margin="5,0,0,0"
                             TextTrimming="CharacterEllipsis" VerticalAlignment="Center" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}" TextAlignment="Left"/>-->
                    <Label Content="Limit" Grid.Column="0"/>
                    <TextBox Text="{Binding SelectedChar.limit, StringFormat={}{0:0.0}}" Grid.Column="1" 
           Tag="LMT"/>
                    <Button Grid.Column="2" Height="18" Width="18" HorizontalAlignment="Left" Command="{Binding SetLimitToMaxSingleCmd}">
                        <Image Source="/Resources/arrow_up.png"/>
                    </Button>
                    <Label Content="Skill" Grid.Column="3"/>
                    <TextBox Text="{Binding SelectedChar.professions.Value, StringFormat={}{0:0.00}}" Grid.Column="4" 
                               Tag="LMT"/>
                    <Button Grid.Column="5" Height="18" Width="18" HorizontalAlignment="Left" Command="{Binding SetSkillToCapSingleCmd}">
                        <Image Source="/Resources/arrow_up.png"/>
                    </Button>

                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="2" BorderThickness="1.5" BorderBrush="DarkGray" Margin="5,5,0,0" Header="Contract">
                <Grid >
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Margin" Value="5"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedChar.contract}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Background" Value="#1F777777"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="2" Content="Days Left"/>
                    <TextBox Tag="INT" Grid.Row="0" Grid.Column="3">
                        <TextBox.Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource txtbox}">
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="Text" Value="{Binding SelectedChar.contract.DaysLeft}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedChar.contract.contractType}" Value="2">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="Text" Value="∞"/>
                                        <Setter Property="Background" Value="#1F777777"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SelectedChar.contract}" Value="{x:Null}">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="Background" Value="#1F777777"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                        <TextBox.ToolTip>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Date end"/>
                                <TextBlock Grid.Row="1" Text="{Binding SelectedChar.contract.dateOfEnding, Converter={StaticResource myDateConverter}}" VerticalAlignment="Center" Margin="5,0,0,0"/>
                            </StackPanel>
                        </TextBox.ToolTip>
                    </TextBox>
                    <Button Grid.Column="4" Height="18" Width="18" HorizontalAlignment="Left"
                            Command="{Binding SetConnDaysSingleCmd}">
                        <Image Source="/Resources/arrow_up.png"/>
                    </Button>
                    <Label Grid.Row="0" Grid.Column="0" Content="Date sign"/>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding SelectedChar.contract.dateOfSigning, Converter={StaticResource myDateConverter}}" VerticalAlignment="Center" Margin="5,0"/>
                    <Label Grid.Row="1" Grid.Column="0" Content="Years"/>
                    <TextBox Text="{Binding SelectedChar.contract.amount}" Grid.Row="1" Grid.Column="1" 
                              Tag="INT"/>
                    <Label Grid.Row="1" Grid.Column="2" Content="Init fee"/>
                    <TextBox Text="{Binding SelectedChar.contract.initialFee}" Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2"
                              Tag="INT"/>
                    <Label Grid.Row="2" Grid.Column="0" Content="M/s">
                        <Label.ToolTip>
                            <TextBlock Text="Mouth salary" Padding="0"/>
                        </Label.ToolTip>
                    </Label>
                    <TextBox Text="{Binding SelectedChar.contract.monthlySalary}" Grid.Row="2" Grid.Column="1"
                              Tag="INT">
                        <TextBox.ToolTip>
                            <TextBlock Text="Mouth salary" Padding="0"/>
                        </TextBox.ToolTip>
                    </TextBox>
                    <Label Grid.Row="2" Grid.Column="2" Content="W/s">
                        <Label.ToolTip>
                            <TextBlock Text="Weight salary" Padding="0"/>
                        </Label.ToolTip>
                    </Label>
                    <TextBox Text="{Binding SelectedChar.contract.weightToSalary}" Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="2"
                              Tag="INT">
                        <TextBox.ToolTip>
                            <TextBlock Text="Weight salary" Padding="0"/>
                        </TextBox.ToolTip>
                    </TextBox>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="3" BorderThickness="1.5" BorderBrush="DarkGray" Margin="5,5,0,0" Header="Traits">
                <Grid Margin="0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" HorizontalAlignment="Left" Source="/Resources/question.png" Width="17" Height="17" Opacity="0.7" Margin="5,0">
                        <Image.ToolTip>
                            <StackPanel>
                                <TextBlock Text="Order is important for ingame visual"/>
                                <TextBlock Text="Because shows only two first Traits"/>
                                <TextBlock Text="The good traits is primary shown"/>
                                <TextBlock Text="Im really don't know does it matters =)"/>
                            </StackPanel>
                        </Image.ToolTip>
                    </Image>
                    <ComboBox Grid.Column="1" Margin="10,0,0,0" VerticalAlignment="Center" Padding="0" Height="20" x:Name="TraitCmb"  HorizontalAlignment="Right"
                              IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
                              Width="150" ItemsSource="{Binding SelectedChar.AvalibaleTraits }" VerticalContentAlignment="Center">
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem}" Value="{x:Null}">
                                        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type views:ControlBase }}, Path=DataContext.Save_Loaded}" />
                            </Style>
                        </ComboBox.Style>
                        <ComboBox.ToolTip>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource LocaleConverter}}"/>
                        </ComboBox.ToolTip>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" Padding="0" Margin="5,0,0,0"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button Grid.Column="2" Grid.Row="0" Height="20" Width="20" HorizontalAlignment="Right" IsEnabled="{Binding SelectedChar.professions.IsTalent}"
                            VerticalAlignment="Top" Margin="10,0,5,0" Command="{Binding AddTraitCmd}" CommandParameter="{Binding ElementName=TraitCmb, Path=SelectedItem}">
                        <Button.Content>
                            <Image Source="/Resources/plus.png"/>
                        </Button.Content>
                    </Button>
                    <ScrollViewer Margin="5,5,5,0" VerticalAlignment="Stretch" Grid.Row="1" Grid.ColumnSpan="3">
                        <ItemsControl ItemsSource="{Binding SelectedChar.labels}" VerticalAlignment="Top">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="0,2,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Column="0" Width="18" Height="18" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" 
                                                VerticalAlignment="Center" HorizontalAlignment="Right" Margin="5,0,15,0"
                                                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type views:ControlBase }}, Path=DataContext.MoveTraitUpCmd}" 
                                                CommandParameter="{Binding }">
                                            <Button.Content>
                                                <Image Source="/Resources/arrow_up.png" Margin="1,0,0,0"/>
                                            </Button.Content>
                                        </Button>
                                        <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" TextWrapping="Wrap" Grid.Column="1" Margin="5,0,5,0"
                                            HorizontalAlignment="Right" Padding="0" TextAlignment="Right"/>
                                        <Button Grid.Column="2" Width="18" Height="18" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" 
                                                VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,15,0"
                                                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type views:ControlBase }}, Path=DataContext.RemoveTraitCmd}" 
                                                CommandParameter="{Binding }">
                                            <Button.Content>
                                                <Image Source="/Resources/minus.png" Margin="1,0,0,0"/>
                                            </Button.Content>
                                        </Button>
                                    </Grid>

                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="4" BorderThickness="1.5" BorderBrush="DarkGray" Margin="5,5,0,0" Header="Skills">
                <Grid Margin="0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*" MinWidth="160"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Image Grid.Column="0" HorizontalAlignment="Left" Source="/Resources/question.png" Width="17" Height="17" Opacity="0.7" Margin="5,0">
                        <Image.ToolTip>
                            <StackPanel>
                                <TextBlock Text="If a character has gained any experience - we can't remove that skill completely." Padding="0"/>
                                <TextBlock Text="We can only manipulate the preset values of the skill (if these values are available)" Padding="0"/>
                                <TextBlock Text="Golden badge is given when the value of 12 and above is reached!" Padding="0"/>
                                <TextBlock Text="Artistic and commercial value of the character is set" Padding="0"/>
                                <TextBlock Text="in the range from 0.0 to 1.0 with increments of 0.25" Padding="0"/>
                            </StackPanel>
                        </Image.ToolTip>
                    </Image>
                    <Button Grid.Column="1" Grid.Row="0" Command="{Binding SetAllSkillsCmd}">
                        <Button.Content>
                            <TextBlock Padding="5,0" Text="Get all" TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
                        </Button.Content>
                    </Button>
                    <ComboBox Grid.Column="2" Margin="10,0,0,0" VerticalAlignment="Center" Padding="0" Height="20" VerticalContentAlignment="Center"
                              IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
                              ItemsSource="{Binding SelectedChar.AvalibaleSkills}" x:Name="SkillCmb" MinWidth="150" HorizontalAlignment="Right">
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem}" Value="{x:Null}">
                                        <Setter Property="ToolTipService.IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="IsEnabled" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type views:ControlBase }}, Path=DataContext.Save_Loaded}" />
                            </Style>
                        </ComboBox.Style>
                        <ComboBox.ToolTip>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource LocaleConverter}}"/>
                        </ComboBox.ToolTip>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" Padding="0" Margin="5,0,0,0"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button Grid.Column="3" Height="20" Width="20" HorizontalAlignment="Right" IsEnabled="{Binding SelectedChar.professions.IsTalent}"
                            Command="{Binding AddSkillCmd}" CommandParameter="{Binding ElementName=SkillCmb, Path=SelectedItem}" 
                            VerticalAlignment="Top" Margin="10,0,5,0">
                        <Button.Content>
                            <Image Source="/Resources/plus.png"/>
                        </Button.Content>
                    </Button>
                    <ScrollViewer Margin="5,5,5,0" Padding="0" Grid.Row="1" Grid.ColumnSpan="4" CanContentScroll="True" BorderThickness="2">
                        <ItemsControl ItemsSource="{Binding SelectedChar.whiteTagsNEW}" >
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="local:WhiteTag">
                                    <Grid Margin="0,2,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="145"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Orientation="Horizontal" Margin="5,0,0,0">
                                            <Label Content="Min." Padding="0" Margin="0"/>
                                            <TextBlock Text="{Binding MinimalValaue, StringFormat={}{0:#0.00}}" VerticalAlignment="Center" Padding="0"
                                                       HorizontalAlignment="Left" Width="30" Margin="4,0,0,0" TextAlignment="Right"/>
                                        </StackPanel>
                                        <TextBlock Grid.Column="1" Text="{Binding id, Converter={StaticResource LocaleConverter}}" Margin="5,0" 
                                                   TextTrimming="CharacterEllipsis" HorizontalAlignment="Right" VerticalAlignment="Center" Padding="0" 
                                                   ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                                        <TextBox Grid.Column="2" Text="{Binding Value, StringFormat={}{0:0.00}}" Margin="0,0,5,0" VerticalAlignment="Center"
                                                 VerticalContentAlignment="Center" Tag="DBL"/>
                                        <Button Grid.Column="3" Width="18" Height="18" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" 
                                                VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,15,0"
                                                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type views:ControlBase}}, Path=DataContext.RemoveSkillCmd}" 
                                                CommandParameter="{Binding }" IsEnabled="{Binding IsZeroOverAllOnly}">
                                            <Button.Content>
                                                <Image Source="/Resources/minus.png" Margin="1,0,0,0"/>
                                            </Button.Content>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </GroupBox>
            <GroupBox Grid.Row="5" BorderThickness="1.5" BorderBrush="DarkGray" Margin="5,5,0,0" Header="Knowed Sins">
                <Grid Margin="0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ScrollViewer Margin="5,0,5,0" VerticalAlignment="Stretch" Grid.Row="0">
                        <ItemsControl ItemsSource="{Binding SelectedChar.aSins}" VerticalAlignment="Top">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="local:Character">
                                    <TextBlock Text="{Binding ., Converter={StaticResource LocaleConverter}}" TextWrapping="Wrap" Margin="5,0,10,5"
                                        HorizontalAlignment="Right" Padding="0" TextAlignment="Right"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </GroupBox>
            <TextBlock Grid.Row="6" Grid.Column="1" Text="{Binding StatusBarText}" Padding="0" FontSize="10" VerticalAlignment="Bottom"
                       Margin="10,0,0,0" HorizontalAlignment="Left"/>
            <Button Grid.Row="6" Grid.Column="1"  Width="25" Height="25" IsEnabled="{Binding Save_Loaded}"
                    VerticalAlignment="Bottom" HorizontalAlignment="Right"
                    Command="{Binding SaveCmd}">
                <Image Source="/Resources/save.png"/>
                <Button.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Save_done}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#7F00FF00" 
                                                            Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                                            FillBehavior="Stop" AutoReverse="True" 
                                                            Duration="0:0:1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <Border Grid.Row="0" Grid.RowSpan="3" Grid.ColumnSpan="2" Margin="0" 
                VerticalAlignment="Center" Opacity="0">
            <Image Source="/Resources/backgrnd.png" Stretch="UniformToFill" HorizontalAlignment="Center"/>
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Save_Loaded}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                         From="1" To="0" 
                                                         FillBehavior="HoldEnd" AutoReverse="False" 
                                                         Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <Setter Property="IsHitTestVisible" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Info.studioName}" HorizontalAlignment="Left" VerticalContentAlignment="Center" FontWeight="Bold" Grid.Column="0"/>
                <TextBlock Text="{Binding PathToSaveFile}"  VerticalAlignment="Center" Grid.Column="1" HorizontalAlignment="Center" Margin="5,0"/>
                <Label Content="{Binding Info.Now, Converter={StaticResource myDateConverter}}" HorizontalAlignment="Right" VerticalContentAlignment="Center" FontWeight="Bold" Grid.Column="2"/>

            </Grid>
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <Button Command="{Binding OpenFileCmd}" CommandParameter="Names"  Grid.Column="0"  Height="25" Width="25" Margin="0,0,0,0" IsEnabled="True">
                    <Button.Content>
                        <Image Source="/Resources/user.png"/>
                    </Button.Content>
                    <Button.ToolTip>
                        <TextBlock Padding="0" Text="Open CHARACTER_NAMES file for better usability"/>
                    </Button.ToolTip>
                </Button>
                <Button Command="{Binding OpenFileCmd}" CommandParameter="OFD" Grid.Column="1" Height="25" Width="25" Margin="5,0,0,0" IsEnabled="True">
                    <Button.Content>
                        <Image Source="/Resources/ofd.png"/>
                    </Button.Content>
                    <Button.ToolTip>
                        <TextBlock Padding="0" Text="Open save.json file"/>
                    </Button.ToolTip>
                </Button>

            </StackPanel>

        </Grid>
    </Grid>
</views:ControlBase>
